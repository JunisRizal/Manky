version: '3.8'

services:
  crypto-predictor:
    build: .
    container_name: crypto-predictor
    restart: unless-stopped
    environment:
      - CRYPTO_PREDICTOR_LOG_LEVEL=INFO
      - CRYPTO_PREDICTOR_CONFIG=/app/config/config.json
      - TZ=Europe/Berlin
    volumes:
      # Persistente Daten
      - crypto_data:/app/data
      - crypto_logs:/app/logs
      - crypto_cache:/app/cache
      - crypto_backups:/app/backups
      # Konfiguration (optional Ã¼berschreibbar)
      - ./config:/app/config:ro
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - crypto_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Monitoring mit Prometheus (auskommentiert)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: crypto-predictor-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #   networks:
  #     - crypto_network

  # Optional: Grafana Dashboard (auskommentiert)
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: crypto-predictor-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   networks:
  #     - crypto_network

volumes:
  crypto_data:
    driver: local
  crypto_logs:
    driver: local
  crypto_cache:
    driver: local
  crypto_backups:
    driver: local
  # prometheus_data:
  #   driver: local
  # grafana_data:
  #   driver: local

networks:
  crypto_network:
    driver: bridge

